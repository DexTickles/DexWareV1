-- DexTickles Ultimate GUI v1.1
-- Stream-proof, modular, sleek dark-themed GUI with advanced tools

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DexTicklesGUI"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui") -- FIXED FOR SOLARA
ScreenGui.ResetOnSpawn = false
ScreenGui.Enabled = true

-- Debug Message
local debugLabel = Instance.new("TextLabel")
debugLabel.Size = UDim2.new(0, 200, 0, 40)
debugLabel.Position = UDim2.new(0, 10, 0, 10)
debugLabel.BackgroundColor3 = Color3.fromRGB(30, 200, 70)
debugLabel.Text = "Dex GUI Loaded âœ…"
debugLabel.TextColor3 = Color3.new(1, 1, 1)
debugLabel.Parent = ScreenGui
debugLabel.Font = Enum.Font.SourceSansBold
debugLabel.TextScaled = true

-- Auto-hide debug label
task.delay(3, function()
    debugLabel:Destroy()
end)

-- Hide/Show Keybind (RightShift)
local guiVisible = true
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.RightShift and not gameProcessed then
        guiVisible = not guiVisible
        ScreenGui.Enabled = guiVisible
    end
end)

-- Draggable Function
local function makeDraggable(gui)
    local dragging, dragInput, dragStart, startPos
    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    RunService.RenderStepped:Connect(function()
        if dragging and dragInput then
            local delta = UserInputService:GetMouseLocation() - dragStart
            gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 550, 0, 400)
MainFrame.Position = UDim2.new(0.5, -275, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = false
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Parent = ScreenGui
makeDraggable(MainFrame)
local UICorner = Instance.new("UICorner", MainFrame)
UICorner.CornerRadius = UDim.new(0, 12)

-- Tabs Frame
local TabsFrame = Instance.new("Frame")
TabsFrame.Size = UDim2.new(1, 0, 0, 40)
TabsFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TabsFrame.Parent = MainFrame

local ContentFrame = Instance.new("Frame")
ContentFrame.Position = UDim2.new(0, 0, 0, 40)
ContentFrame.Size = UDim2.new(1, 0, 1, -40)
ContentFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ContentFrame.Parent = MainFrame

local Tabs = {}
local CurrentTab = nil

local function createTab(name)
    local button = Instance.new("TextButton")
    button.Text = name
    button.Size = UDim2.new(0, 100, 1, 0)
    button.Position = UDim2.new(0, #Tabs * 100, 0, 0)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.BorderSizePixel = 0
    button.Parent = TabsFrame

    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, 0, 1, 0)
    content.Visible = false
    content.BackgroundTransparency = 1
    content.Parent = ContentFrame

    button.MouseButton1Click:Connect(function()
        if CurrentTab then CurrentTab.Visible = false end
        CurrentTab = content
        content.Visible = true
    end)

    table.insert(Tabs, button)
    return content
end

-- ESP Tab
local ESPTab = createTab("ESP")
local espEnabled = false
local ESPName = Instance.new("TextButton", ESPTab)
ESPName.Text = "Toggle Name ESP"
ESPName.Size = UDim2.new(0, 200, 0, 40)
ESPName.Position = UDim2.new(0, 20, 0, 20)
ESPName.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
ESPName.TextColor3 = Color3.new(1, 1, 1)

local espFolder = Instance.new("Folder")
espFolder.Name = "ESPFolder"
espFolder.Parent = ScreenGui -- changed from CoreGui for Solara safety

ESPName.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espFolder:ClearAllChildren()
    if espEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                local success, err = pcall(function()
                    local billboard = Instance.new("BillboardGui")
                    billboard.Adornee = player.Character.Head
                    billboard.Size = UDim2.new(0, 200, 0, 50)
                    billboard.StudsOffset = Vector3.new(0, 2, 0)
                    billboard.AlwaysOnTop = true
                    billboard.Name = player.Name .. "_ESP"

                    local nameLabel = Instance.new("TextLabel")
                    nameLabel.Size = UDim2.new(1, 0, 1, 0)
                    nameLabel.BackgroundTransparency = 1
                    nameLabel.Text = player.Name
                    nameLabel.TextColor3 = Color3.new(1, 1, 1)
                    nameLabel.TextStrokeTransparency = 0
                    nameLabel.TextScaled = true
                    nameLabel.Parent = billboard

                    billboard.Parent = espFolder
                end)
            end
        end
    end
end)

-- Everything else remains unchanged...
-- Movement Tab, Settings Tab, Infinite Jump, Keybinds, Anti-AFK, etc.
-- Tool grabber and teleport will also be wrapped with safety checks in next update if needed.
